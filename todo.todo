☐ Convert all firestore interactions into calls to a server API


☐ Implement logic for handling dates and project value.
☐ When a project is deleted, all of its samples should be deleted

API routes:
    ✔ getAllProjects @done(25-01-20 20:50)
    ☐ getOneProject
    ☐ updateProject
    ☐ dataEntryProject
    ☐ deleteProject

    ☐ getAllClients
    ☐ getOneClient
    ☐ updateClient
    ☐ deleteClient

Pages to create:
    ✔ Add client @done(25-01-13 11:07)
    ✔ Edit client @done(25-01-13 17:59)
    ✔ Edit project @done(25-01-13 19:57)
    ✔ Data entry (Analysis) @done(25-01-20 15:44)
    ☐ Deleted entities
    ☐ Price sheet (for admins)
    ☐ View client's project list (link to this will be the client name on Client page)

    ☐ Login page
    ☐ Navbar (Home, projects, clients, [logout])

Auth:
    ☐ 
    Create different classes of user and give them priviledges based on this
        Analyst, Admin, Client??

Testing: 
    ☐ Create tests in Postman for API routes
        GET Projects
        POST Projects
        UPDATE Projects
        DELETE Projects
        GET Clients
        POST Clients
        UPDATE Clients
        DELETE Clients
    ☐ Look into other ways of testing web pages

Typescript:
    ☐ Make sure each page has a Typescript interface, as needed
        